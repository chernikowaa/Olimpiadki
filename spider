def position(a):
    if a[0] == 0:
        a.append(5)
    elif a[0] == x:
        a.append(2)
    elif a[1] == 0:
        a.append(1)
    elif a[1] == y:
        a.append(6)
    elif a[2] == 0:
        a.append(3)
    else:
        a.append(4)


for n in range(10, 21):
    f = open(f'input_s1_{n}.txt', 'r').readlines()
    r = open(f'output_s1_{n}.txt', 'r').readlines()
    for i in range(0, len(f)):
        f[i] = f[i].replace("\n", "").split(" ")
        for j in range(3):
            f[i][j] = int(f[i][j])
    x = f[0][0]
    y = f[0][1]
    z = f[0][2]
    for i in range(1, len(f)):
        position(f[i])
    if f[1][-1] == f[2][-1]:
        l = ((f[1][0] - f[2][0]) ** 2 + (f[1][1] - f[2][1]) ** 2 + (f[1][2] - f[2][2]) ** 2)
        l = (round(l ** 0.5, 3))
    elif f[1][-1] + f[2][-1] != 7:
        if f[1][-1] == 1 and f[2][-1] == 2:
            l = ((x - f[1][0] + f[2][1]) ** 2 + (f[1][2] - f[2][2]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 2 and f[2][-1] == 1:
            c = f[1]
            f[1] = f[2]
            f[2] = c
            l = ((x - f[1][0] + f[2][1]) ** 2 + (f[1][2] - f[2][2]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 2 and f[2][-1] == 6:
            l = ((y - f[1][1] + x - f[2][0]) ** 2 + (f[1][2] - f[2][2]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 6 and f[2][-1] == 2:
            c = f[1]
            f[1] = f[2]
            f[2] = c
            l = ((y - f[1][1] + x - f[2][0]) ** 2 + (f[1][2] - f[2][2]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 6 and f[2][-1] == 5:
            l = ((f[1][0] + y - f[2][1]) ** 2 + (f[1][2] - f[2][2]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 5 and f[2][-1] == 6:
            c = f[1]
            f[1] = f[2]
            f[2] = c
            l = ((f[1][0] + y - f[2][1]) ** 2 + (f[1][2] - f[2][2]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 5 and f[2][-1] == 1:
            l = ((f[1][1] + f[2][0]) ** 2 + (f[1][2] - f[2][2]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 1 and f[2][-1] == 5:
            c = f[1]
            f[1] = f[2]
            f[2] = c
            l = ((f[1][1] + f[2][0]) ** 2 + (f[1][2] - f[2][2]) ** 2)
            l = (round(l ** 0.5, 3))

        if f[1][-1] == 1 and f[2][-1] == 4:
            l = ((z-f[1][2]+f[2][1]) ** 2 + (f[1][0] - f[2][0]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 4 and f[2][-1] == 1:
            c = f[1]
            f[1] = f[2]
            f[2] = c
            l = ((z-f[1][2]+f[2][1]) ** 2 + (f[1][0] - f[2][0]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 4 and f[2][-1] == 6:
            l = ((y-f[1][2]+z-f[2][2]) ** 2 + (f[1][0] - f[2][0]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 6 and f[2][-1] == 4:
            c = f[1]
            f[1] = f[2]
            f[2] = c
            l = ((y-f[1][2]+z-f[2][2]) ** 2 + (f[1][0] - f[2][0]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 6 and f[2][-1] == 3:
            l = ((f[1][2]+y-f[2][1]) ** 2 + (f[1][0] - f[2][0]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 3 and f[2][-1] == 6:
            c = f[1]
            f[1] = f[2]
            f[2] = c
            l = ((f[1][2]+y-f[2][1]) ** 2 + (f[1][0] - f[2][0]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 3 and f[2][-1] == 1:
            l = ((f[1][1]+f[2][2]) ** 2 + (f[1][0] - f[2][0]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 1 and f[2][-1] == 3:
            c = f[1]
            f[1] = f[2]
            f[2] = c
            l = ((f[1][1]+f[2][2]) ** 2 + (f[1][0] - f[2][0]) ** 2)
            l = (round(l ** 0.5, 3))

        if f[1][-1] == 2 and f[2][-1] == 4:
            l = ((z-f[1][2]+x-f[2][0]) ** 2 + (f[1][1] - f[2][1]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 4 and f[2][-1] == 2:
            c = f[1]
            f[1] = f[2]
            f[2] = c
            l = ((z-f[1][2]+x-f[2][0]) ** 2 + (f[1][1] - f[2][1]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 4 and f[2][-1] == 5:
            l = ((f[1][0]+z-f[2][2]) ** 2 + (f[1][1] - f[2][1]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 5 and f[2][-1] == 4:
            c = f[1]
            f[1] = f[2]
            f[2] = c
            l = ((f[1][0]+z-f[2][2]) ** 2 + (f[1][1] - f[2][1]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 5 and f[2][-1] == 3:
            l = ((f[1][2]+f[2][0]) ** 2 + (f[1][1] - f[2][1]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 3 and f[2][-1] == 5:
            c = f[1]
            f[1] = f[2]
            f[2] = c
            l = ((f[1][2]+f[2][0]) ** 2 + (f[1][1] - f[2][1]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 3 and f[2][-1] == 2:
            l = ((x-f[1][0]+f[2][2]) ** 2 + (f[1][1] - f[2][1]) ** 2)
            l = (round(l ** 0.5, 3))
        if f[1][-1] == 2 and f[2][-1] == 3:
            c = f[1]
            f[1] = f[2]
            f[2] = c
            l = ((x-f[1][0]+f[2][2]) ** 2 + (f[1][1] - f[2][1]) ** 2)
            l = (round(l ** 0.5, 3))
    else:
        if f[1][-1] == 1 and f[2][-1] == 6:
            otv = []
            otv.append(((z-f[1][2]+y+z-f[2][2]) ** 2 + (f[1][0]-f[2][0]) ** 2))
            otv.append(((f[1][2] + y + f[2][2]) ** 2 + (f[1][0] - f[2][0]) ** 2))
            otv.append(((x - f[1][0] + y + x - f[2][0]) ** 2 + (f[1][2] - f[2][2]) ** 2))
            otv.append(((f[1][0] + y + f[2][0]) ** 2 + (f[1][2] - f[2][2]) ** 2))
            l = (round(min(otv) ** 0.5, 3))
        if f[1][-1] == 5 and f[2][-1] == 2:
            otv = []
            otv.append(((z-f[1][2]+x+z-f[2][2]) ** 2 + (f[1][1]-f[2][1]) ** 2))
            otv.append(((f[1][2] + x + f[2][2]) ** 2 + (f[1][1] - f[2][1]) ** 2))
            otv.append(((y - f[1][1] + x + y - f[2][1]) ** 2 + (f[1][2] - f[2][2]) ** 2))
            otv.append(((f[1][1] + x + f[2][1]) ** 2 + (f[1][2] - f[2][2]) ** 2))
            l = (round(min(otv) ** 0.5, 3))

    if l == float(r[0]):
        print(f"true")
